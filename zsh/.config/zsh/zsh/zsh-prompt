#!/bin/sh

## autoload vcs and colors
autoload -Uz vcs_info
autoload -U colors && colors

# enable only git 
zstyle ':vcs_info:*' enable git 

# setup a hook that runs before every ptompt. 
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst


zstyle ':vcs_info:*' 			actionformats 	'%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' 			formats       	'%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' 	branchformat  	'%b%F{1}:%F{3}%r'
PS1='%F{5}[%F{2}%n%F{5}] %F{3}%3~ ${vcs_info_msg_0_}%f%# '













# add a function to check for untracked files in the directory.
# from https://github.com/zsh-users/zsh/blob/master/Misc/vcs_info-examples
# zstyle ':vcs_info:git*+set-message:*' hooks git-untracked
# # 
# +vi-git-untracked(){
#     if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) == 'true' ]] && \
#         git status --porcelain | grep '??' &> /dev/null ; then
#         # This will show the marker if there are any untracked files in repo.
#         # If instead you want to show the marker only if there are untracked
#         # files in $PWD, use:
#         #[[ -n $(git ls-files --others --exclude-standard) ]] ; then
#         # hook_com[staged]+='!' # signify new files with a bang
#         hook_com[staged]+="%{$bg[yellow]%}%{$fg[black]%}" # signify new files with a bang
#     fi
# }
# 
# ### git: Show +N/-N when your local branch is ahead-of or behind remote HEAD.
# # Make sure you have added misc to your 'formats':  %m
# #zstyle ':vcs_info:git*+set-message:*' hooks git-st
# #
# #function +vi-git-st() {
# #    local ahead behind
# #    local -a gitstatus
# #
# #    # Exit early in case the worktree is on a detached HEAD
# #    git rev-parse ${hook_com[branch]}@{upstream} >/dev/null 2>&1 || return 0
# #
# #    local -a ahead_and_behind=(
# #	$(git rev-list --left-right --count HEAD...${hook_com[branch]}@{upstream} 2>/dev/null)
# #    )
# #
# #    ahead=${ahead_and_behind[1]}
# #    behind=${ahead_and_behind[2]}
# #
# #    (( $ahead )) && gitstatus+=( "+${ahead}" )
# #    (( $behind )) && gitstatus+=( "-${behind}" )
# #
# #    #hook_com[misc]+=${(j:/:)gitstatus}
# #}
# 
# 
# zstyle ':vcs_info:*' check-for-changes true
# zstyle ':vcs_info:git:*' formats "%c  %b "
# # zstyle ':vcs_info:git:*' formats " %{$bg[yellow]%}  %{$fg[blue]%}(%{$fg[red]%}%m%u%c%{$fg[yellow]%}%{$fg[magenta]%} %b%{$fg[blue]%}) %{$reset_color%}"
# 
# # format our main prompt for hostname current folder, and permissions.
# PROMPT="%{$bg[magenta]%} %3~ %{$reset_color%}"
# 
# # PROMPT="%B%{$fg[blue]%}[%{$fg[white]%}%n%{$fg[red]%}@%{$fg[white]%}%m%{$fg[blue]%}] %(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )%{$fg[cyan]%}%c%{$reset_color%}"
# # PROMPT="%{$fg[green]%}%n@%m %~ %{$reset_color%}%#> "
# 
# PROMPT+="\$vcs_info_msg_0_%{$reset_color%} "
