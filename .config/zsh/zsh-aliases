#!/bin/sh
alias ls='ls --color=auto'
alias la='ls -A'
alias ll='ls -lhG'
alias l='ll'
alias f='zi'
alias zsh-update-plugins="find "$ZDOTDIR/plugins" -type d -exec test -e '{}/.git' ';' -print0 | xargs -I {} -0 git -C {} pull -q"

# quick navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# get fastest mirrors
alias mirror="sudo reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist"
alias mirrord="sudo reflector --latest 50 --number 20 --sort delay --save /etc/pacman.d/mirrorlist"
alias mirrors="sudo reflector --latest 50 --number 20 --sort score --save /etc/pacman.d/mirrorlist"
alias mirrora="sudo reflector --latest 50 --number 20 --sort age --save /etc/pacman.d/mirrorlist"

# Colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# git aliases
alias gs='git status'
alias ga='git add .'
alias gaa='git add --all'
alias gc='git commit -m'
alias gp='git push'
alias gf='git fetch'
alias gpl='git pull'
alias gco='git checkout'
alias gm='git merge'

# easier to read disk
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB

# get top process eating memory
alias psmem='ps auxf | sort -nr -k 4 | head -5'

# get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3 | head -5'

# gpg encryption
# verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
# receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"

# systemd
alias list_systemctl="systemctl list-unit-files --state=enabled"

# transform `nvim .` into `n` & `nvim <file>` into `n <file>`
n() {
  if [ $# -eq 0 ]; then
    # check if there is a main.tex file
    if [ -f "main.tex" ]; then
      # if so, open the main.tex file
      nvim "main.tex"
    else
      # otherwise, open the current directory
      nvim .
    fi
  else
    # check if we try to open a directory
    # if so, check if there is a main.tex file
    if [ -d "$1" ] && [ -f "$1/main.tex" ]; then
      # if so, open the main.tex file
      nvim "$1/main.tex"
    else
      # otherwise, open the file
      nvim "$@"
    fi
  fi
}

# transform `j <dir> && nvim .` into `jn <dir>` 
jn() {
  j "$@" && n
}

# copy ~/.dotfiles/latex to current directory or to specified directory
ltx() {
  if [ $# -eq 0 ]; then
    echo "Please specify a directory to copy to." >&2 && return 1
  else
    cp -r ~/.dotfiles/latex "$@"
  fi
}
